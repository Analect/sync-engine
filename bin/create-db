#!/usr/bin/env python
import os
import click
import sqlalchemy
from urllib import quote_plus as urlquote

from alembic.config import Config as alembic_config
from alembic import command as alembic_command

from inbox.config import config, db_uri

from inbox.ignition import init_mailsync_db, init_master_db
from inbox.sharding import default_shard_engine
from inbox.sqlalchemy_ext.util import ForceStrictMode

shard_engine = default_shard_engine()


def create_database(username, password, host, port, database):
    uri = db_uri(
        username=username,
        # http://stackoverflow.com/a/15728440 (also applicable to '+' sign)
        password=urlquote(password),
        host=host,
        port=port,
        database='')

    basic_engine = sqlalchemy.create_engine(
        uri, listeners=[ForceStrictMode()], echo=False)

    basic_engine.execute("CREATE DATABASE IF NOT EXISTS {} DEFAULT CHARACTER "
                         "SET utf8mb4 DEFAULT COLLATE utf8mb4_general_ci;".
                         format(database))
    basic_engine.execute("GRANT ALL PRIVILEGES ON {database}.* TO "
                         "{user}@localhost IDENTIFIED BY '{user}'".
                         format(user=username, database=database))


def create_master_database():
    user = config.get_required('MASTER_USER')
    password = config.get_required('MASTER_PASSWORD')
    host = config.get_required('MASTER_HOSTNAME')
    port = config.get_required('MASTER_PORT')
    database = config.get_required('MASTER_DATABASE')
    create_database(user, password, host, port, database)


def create_shard_database():
    shard_key = config.get_required('DEFAULT_SHARD_KEY')
    shard_data = config.get_required('SHARD_MAP')[shard_key]
    user = shard_data['USERNAME']
    password = shard_data['PASSWORD']
    host = shard_data['HOSTNAME']
    port = shard_data['PORT']
    database = shard_data['DATABASE']
    create_database(user, password, host, port, database)


def create_test_database():
    user = 'inboxtest'
    password = 'inboxtest'
    host = 'localhost'
    port = 3306
    database = 'test'
    create_database(user, password, host, port, database)


@click.command()
@click.option('--prod/--no-prod', default=False,
              help='Disable creating the test database for production '
                   'deployments')
def main(prod):

    if not prod:
        print 'Creating database: test'
        create_test_database()

    create_shard_database()
    init_mailsync_db(shard_engine)

    create_master_database()
    init_master_db(shard_engine)

    # Stamp initial alembic revision
    if shard_engine.dialect.has_table(shard_engine, "alembic_version"):
        res = shard_engine.execute(
            "SELECT version_num from alembic_version")
        current_revision = [r for r in res][0][0]
        assert current_revision, \
            'Need current revision in alembic_version table.'
        print 'Already revisioned by alembic {0}'.format(current_revision)
    else:
        alembic_ini_filename = 'alembic.ini'  # top-level, with setup.sh
        assert os.path.isfile(alembic_ini_filename), \
            'Must have alembic.ini file at {0}'.format(alembic_ini_filename)
        alembic_cfg = alembic_config(alembic_ini_filename)

        print 'Stamping with alembic revision'
        alembic_command.stamp(alembic_cfg, "head")

    print 'Finished setting up database'


if __name__ == '__main__':
    main()
